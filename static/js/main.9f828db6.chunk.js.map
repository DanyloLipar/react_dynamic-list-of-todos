{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["URL","request","url","fetch","then","response","json","TodoList","todos","selectedUser","selectedUserId","className","map","todo","classnames","TodoList__item","completed","htmlFor","id","checked","type","readOnly","title","userId","onClick","CurrentUser","useState","user","setUser","useEffect","userFromServer","name","email","phone","App","setSelectedUserId","setTodos","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"0QAGMA,G,YAAM,qCAENC,EAAU,SAACC,GACf,OAAOC,MAAMD,GACVE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,+BCIlBC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,eAAxB,OACvC,sBAAKC,UAAU,WAAf,UACE,wCAEA,qBAAKA,UAAU,2BAAf,SACE,oBAAIA,UAAU,iBAAd,SACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAEEF,UAAWG,IAAW,CACpBC,gBAAgB,EAChB,6BAA8BF,EAAKG,UACnC,0BAA2BH,EAAKG,YALpC,UAQE,wBAAOC,QAAO,UAAKJ,EAAKK,IAAxB,UACE,uBACEC,QAASN,EAAKG,UACdE,GAAE,UAAKL,EAAKK,IACZE,KAAK,WACLC,UAAQ,IAEV,4BAAIR,EAAKS,WAGX,yBACEX,UAAWG,IACT,wBACA,CAAE,kCAAmCJ,IAAmBG,EAAKU,QAC7D,UAEFH,KAAK,SACLI,QAAS,kBAAMf,EAAaI,EAAKU,SAPnC,qBAUGV,EAAKU,YA3BHV,EAAKK,eCVTO,G,MAA+B,SAAC,GAAgB,IAAdF,EAAa,EAAbA,OAC7C,EAAwBG,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OALAC,qBAAU,WFCW,IAACX,KEAZK,EFCHtB,EAAQ,GAAD,OAAID,EAAJ,kBAAiBkB,KEA1Bd,MAAK,SAAA0B,GAAc,OAAIF,EAAQE,QACjC,CAACP,IAGF,sBAAKZ,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,SAAmC,sDAAgBgB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMT,QAEzD,oBAAIP,UAAU,oBAAd,gBAAmCgB,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMI,OACzC,mBAAGpB,UAAU,qBAAb,gBAAmCgB,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMK,QACzC,mBAAGrB,UAAU,qBAAb,gBAAmCgB,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMM,aCgBhCC,EAhCO,WACpB,MAA4CR,mBAAS,GAArD,mBAAOhB,EAAP,KAAuByB,EAAvB,KACA,EAA0BT,mBAAiB,IAA3C,mBAAOlB,EAAP,KAAc4B,EAAd,KASA,OAPAP,qBAAU,WHDH5B,EAAQ,GAAD,OAAID,EAAJ,WGGTI,MAAK,SAAAiC,GACJD,EAASC,QAEZ,IAGD,sBAAK1B,UAAU,MAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACED,eAAgBA,EAChBD,aAAc0B,EACd3B,MAAOA,MAIX,qBAAKG,UAAU,eAAf,SACE,qBAAKA,UAAU,yBAAf,SACGD,EACC,cAAC,EAAD,CAAaa,OAAQb,IACnB,2BC9Bd4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9f828db6.chunk.js","sourcesContent":["import { User } from '../types/User';\nimport { Todo } from '../types/Todo';\n\nconst URL = 'https://mate.academy/students-api';\n\nconst request = (url: string) => {\n  return fetch(url)\n    .then(response => response.json());\n};\n\nexport const getTodos = (): Promise<Todo[]> => {\n  return request(`${URL}/todos`);\n};\n\nexport const getUser = (id: number): Promise<User> => {\n  return request(`${URL}/users/${id}`);\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  selectedUser: (id: number) => void,\n  selectedUserId: number\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectedUser, selectedUserId }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classnames({\n              TodoList__item: true,\n              'TodoList__item--unchecked': !todo.completed,\n              'TodoList__item--checked': todo.completed,\n            })}\n          >\n            <label htmlFor={`${todo.id}`}>\n              <input\n                checked={todo.completed}\n                id={`${todo.id}`}\n                type=\"checkbox\"\n                readOnly\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className={classnames(\n                'TodoList__user-button',\n                { 'TodoList__user-button--selected': selectedUserId === todo.userId },\n                'button',\n              )}\n              type=\"button\"\n              onClick={() => selectedUser(todo.userId)}\n            >\n              User&nbsp;\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId }) => {\n  const [user, setUser] = useState<User>();\n  // i can't add \"null\" into useState brackets because of error\n\n  useEffect(() => {\n    getUser(userId)\n      .then(userFromServer => setUser(userFromServer));\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>{`User: ${user?.id}`}</span></h2>\n\n      <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n      <p className=\"CurrentUser__email\">{user?.email}</p>\n      <p className=\"CurrentUser__phone\">{user?.phone}</p>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          selectedUserId={selectedUserId}\n          selectedUser={setSelectedUserId}\n          todos={todos}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser userId={selectedUserId} />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}